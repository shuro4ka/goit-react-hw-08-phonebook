{"version":3,"file":"static/js/319.17f5c2d9.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactElement/ContactElement.styled.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const label = styled.span`\n    color: blue;\n    font-size: 24px;\n    font-style: bold;    \n`;\n\nexport const AddButton = styled.button`\n    padding: 8px 16px;\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n    background-color: blue; \n    margin: 15px;\n    cursor: pointer;\n    font-style: bold;\n    color: white; \n    font-weight: bold;  \n`;\n\nexport const input = styled.input`\n      background-color: lightblue;\n    color: blue;\n`;\n\n","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;","import { AddButton } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts).items;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const {\n      elements: { name, number},\n    } = e.target;\n\n    const index = contacts.findIndex(\n      contact => contact.name.toLowerCase() === name.value.toLowerCase()\n    );\n\n    if (index >= 0) {\n      alert(`${name.value} is already in contacts.`);\n      e.target.reset();\n      return;\n    }\n\n    const contact = {\n      name: name.value,\n      number: number.value,\n    };\n   \n\n    dispatch(addContact(contact));\n    e.target.reset();\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name must be letters and can contain spaces,dashes\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <AddButton type=\"submit\">Add contact</AddButton>\n    </form>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FilterInput = styled.input`\n    background-color: lightblue;\n    color: blue;\n`;","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { FilterInput } from './Filter.styled';\nimport React from 'react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterInput\n      placeholder=\"Search\"\n      type=\"text\"\n      name=\"filter\"\n      onChange={handleChange}\n    />\n  );\n};\n","import styled from \"styled-components\"\n\nexport const DeleteButton = styled.button`\n    padding: 8px 16px;\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n    background-color: blue; \n    margin: 15px;\n    cursor: pointer;\n    font-style: bold;\n    color: white; \n    font-weight: bold;  \n\n`;","import { DeleteButton } from './ContactElement.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactElement = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      {name} : {number}\n      <DeleteButton\n        onClick={() => {\n          dispatch(deleteContact(id));\n        }}\n        type=\"button\"\n      >\n        Delete\n      </DeleteButton>\n    </li>\n  );\n};\n","import { ContactElement } from 'components/ContactElement/ContactElement';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    if (filter) {\n      return items.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return items;\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <div>\n      {isLoading && <b>Loading...</b>}\n      {error && <b>{error.message}</b>}\n      <section>\n        <h2>Contacts</h2>\n\n        <ul>\n          {Array.isArray(filteredContacts)\n            ? filteredContacts.map(({ id, name, number }) => {\n                return (\n                  <ContactElement\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                  ></ContactElement>\n                );\n              })\n            : null}\n        </ul>\n      </section>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;"],"names":["AddButton","styled","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","ContactForm","dispatch","useDispatch","useSelector","items","autoComplete","onSubmit","e","preventDefault","target","elements","name","number","index","findIndex","contact","toLowerCase","value","alert","reset","addContact","htmlFor","type","pattern","title","required","FilterInput","Filter","placeholder","onChange","setFilter","DeleteButton","ContactElement","id","onClick","deleteContact","ContactList","error","useEffect","fetchContacts","filteredContacts","includes","message","Array","isArray","map"],"sourceRoot":""}